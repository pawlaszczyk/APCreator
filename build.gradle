
plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.runtime' version '1.13.1'
}

def currentOs = org.gradle.internal.os.OperatingSystem.current()

group 'hsmw'
version '1.0-SNAPSHOT'

application {
    mainClassName = "hsmw.creator.APMCreator"
}

repositories {
  mavenCentral()
}

sourceCompatibility = '21'
targetCompatibility = '21'

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

application {
  mainModule = 'hsmw.creator'
  mainClass  = 'hsmw.creator.APMCreator'
}

javafx {
  version = '21'
  modules = ['javafx.controls', 'javafx.fxml','javafx.web']
}

jar {
    manifest {
        attributes(
                'Main-Class': 'hsmw.creator.APMCreator'
        )
    }
}

dependencies {
  implementation group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.11.0'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'hsmw.creator.APMCreator'
        )
    }
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    launcher {
        noConsole = true
    }

    jpackage {
        installerOptions += ['--resource-dir', "resources"]

        if (currentOs.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        } else if (currentOs.linux) {
            installerOptions += ['--linux-package-name', 'apCreator', '--linux-shortcut']
        } else if (currentOs.macOsX) {
            installerOptions += ['--mac-package-name', 'apCreator']
        }
    }
}


